name: E2E

on: [push, pull_request]

jobs:
  env:
    runs-on: ubuntu-latest
    outputs:
      env: ${{ steps.import-env.outputs.result }}

    steps:
      - name: Import env vars
        id: import-env
        uses: actions/github-script@v2
        with:
          script: |
            let env = parseEnv(`${process.env.GITHUB_WORKSPACE}/test-environment/.env.example`);
            env = { ...env, FORK_RPC_URL: ${{ secrets.FORK_RPC_URL }} }
            Object.entries(env).forEach((x) => core.exportVariables(...x));
            return env;

  build:
    runs-on: ubuntu-latest
    needs: [env]
    env: ${{ fromJson(needs.env.outputs.env) }}
    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: yarn

      - run: yarn install
      - name: Get cached test-environment file
        uses: actions/cache@v2
        with:
          path: ${{ GITHUB_WORKSPACE }}/test-environment/archives/data_${{ env.BLOCK_HEIGHT }}_${{ env.SUBGRAPH_ID }}_${{ env.EPOCH_TIME }}.archive.tar.lz4`
          key: data-${{ env.BLOCK_HEIGHT }}-${{ env.SUBGRAPH_ID }}-${{ env.EPOCH_TIME }}
          restore-keys: data-${{ env.BLOCK_HEIGHT }}-${{ env.SUBGRAPH_ID }}-${{ env.EPOCH_TIME }}

      - run: yarn e2e:ci
