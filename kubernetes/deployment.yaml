apiVersion: apps/v1
kind: Deployment
metadata:
  name: ens-test-env-gke
spec:
  selector:
    matchLabels:
      app: env
  template:
    metadata:
      labels:
        app: env
    spec:
      terminationGracePeriodSeconds: 0
      volumes:
        - name: shared-data
          emptyDir: {}
      initContainers:
        - name: init-shared-data
          image: taytems/tar-lz4:latest
          command: ['/bin/sh']
          args:
            - -c
            - wget -O archive.tar.lz4 $(ARCHIVE_URL)/data_$(BLOCK_HEIGHT)_$(SUBGRAPH_ID)_$(EPOCH_TIME)_$(NETWORK).archive.tar.lz4;
              echo "FINISHED ONE!";
              tar --use-compress-program=lz4 -xvf archive.tar.lz4 -C /data;
              echo "FINISHED TWO!";
              rm archive.tar.lz4
          volumeMounts:
            - mountPath: /data
              name: shared-data
          env:
            - name: ARCHIVE_URL
              valueFrom:
                configMapKeyRef:
                  key: ARCHIVE_URL
                  name: env-config
            - name: BLOCK_HEIGHT
              valueFrom:
                configMapKeyRef:
                  key: BLOCK_HEIGHT
                  name: env-config
            - name: SUBGRAPH_ID
              valueFrom:
                configMapKeyRef:
                  key: SUBGRAPH_ID
                  name: env-config
            - name: EPOCH_TIME
              valueFrom:
                configMapKeyRef:
                  key: EPOCH_TIME
                  name: env-config
            - name: NETWORK
              valueFrom:
                configMapKeyRef:
                  key: NETWORK
                  name: env-config
      containers:
        - name: ganache
          image: taytems/ganache-node-16-amd64:latest
          resources:
            requests:
              memory: '3G'
              cpu: '2'
          volumeMounts:
            - mountPath: /ganache
              subPath: ganache
              name: shared-data
          ports:
            - containerPort: 8545
          args:
            - '--chain.chainId'
            - $(CHAIN_ID)
            - '--fork.url'
            - $(FORK_RPC_URL)
            - '--fork.blockNumber'
            - $(BLOCK_HEIGHT)
            - '--wallet.mnemonic'
            - $(SECRET_WORDS)
            - '--wallet.defaultBalance'
            - '1000'
            - '--db'
            - '/ganache'
          env:
            - name: CHAIN_ID
              valueFrom:
                configMapKeyRef:
                  name: env-config
                  key: CHAIN_ID
            - name: FORK_RPC_URL
              valueFrom:
                secretKeyRef:
                  name: fork-rpc-url
                  key: FORK_RPC_URL
                  optional: false
            - name: BLOCK_HEIGHT
              valueFrom:
                configMapKeyRef:
                  name: env-config
                  key: BLOCK_HEIGHT
            - name: SECRET_WORDS
              valueFrom:
                configMapKeyRef:
                  name: env-config
                  key: SECRET_WORDS
        - name: graph-node
          image: graphprotocol/graph-node:latest
          resources:
            requests:
              memory: '3G'
              cpu: '1'
          ports:
            - containerPort: 8000
            - containerPort: 8001
            - containerPort: 8020
            - containerPort: 8030
            - containerPort: 8040
          env:
            - name: postgres_host
              value: localhost
            - name: postgres_user
              value: graph-node
            - name: postgres_pass
              value: let-me-in
            - name: postgres_db
              value: graph-node
            - name: ipfs
              value: localhost:5001
            - name: NETWORK
              valueFrom:
                configMapKeyRef:
                  name: env-config
                  key: NETWORK
            - name: ethereum
              value: $(NETWORK):http://localhost:8545
            - name: GRAPH_LOG
              value: debug
            - name: GRAPH_ETHEREUM_CLEANUP_BLOCKS
              value: 'true'
            - name: DISABLE_BLOCK_INGESTOR
              value: 'true'
        - name: ipfs
          image: ipfs/go-ipfs:v0.4.23
          ports:
            - containerPort: 5001
          volumeMounts:
            - mountPath: /data/ipfs
              subPath: ipfs
              name: shared-data
        - name: postgres
          image: postgres
          ports:
            - containerPort: 5432
          command: ['docker-entrypoint.sh']
          args:
            - -c
            - shared_preload_libraries=pg_stat_statements
          env:
            - name: POSTGRES_USER
              value: graph-node
            - name: POSTGRES_PASSWORD
              value: let-me-in
            - name: POSTGRES_DB
              value: graph-node
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              subPath: postgres
              name: shared-data
