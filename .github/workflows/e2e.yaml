name: E2E

on: [push, pull_request]

jobs:
  pre_job:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          concurrent_skipping: 'same_content_newer'

  build:
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    timeout-minutes: 10
    runs-on: ubuntu-latest
    needs: [pre_job]
    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3

      - name: Get and modify .env file
        run: |
          cp .env.local.example .env.local
          sed -i 's@\(FORK_RPC_URL\=\).*@\1${{ secrets.ROPSTEN_FORK_RPC_URL }}@' .env.local
          cat .env >> $GITHUB_ENV

      - name: Get cached test-environment file
        uses: actions/cache@v3
        id: archive-cache
        with:
          path: ./archives
          key: data-${{ env.BLOCK_HEIGHT }}-${{ env.SUBGRAPH_ID }}-${{ env.EPOCH_TIME }}-${{ env.NETWORK }}

      - name: Download Archive
        if: steps.archive-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p archives
          curl ${{ env.ARCHIVE_URL }}/data_${{ env.BLOCK_HEIGHT }}_${{ env.SUBGRAPH_ID }}_${{ env.EPOCH_TIME }}_${{ env.NETWORK }}.archive.tar.lz4 \
            -o ./archives/archive.tar.lz4

      - name: Extract Archive
        run: |
          tar -I lz4 -xf ./archives/archive.tar.lz4

      - name: E2E on Chrome
        uses: cypress-io/github-action@v2
        with:
          install-command: yarn install --immutable
          command: yarn cypress run --config-file cypress.json --browser chrome --headed
          build: yarn build:glocal
          start: yarn start, yarn e2e:ci, echo '${{ env }}'
          wait-on: 'http://localhost:3000, http://localhost:8040'
        env:
          CYPRESS_REMOTE_DEBUGGING_PORT: 9222
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          METAMASK_VERSION: ${{ env.METAMASK_VERSION }}
          PASSWORD: ${{ env.PASSWORD }}
          SECRET_WORDS: ${{ env.SECRET_WORDS }}
          NETWORK_NAME: ${{ env.NETWORK_NAME }}
          RPC_URL: ${{ env.RPC_URL }}

      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
      # Test run video was always captured, so this action uses "always()" condition
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: cypress-videos
          path: cypress/videos
