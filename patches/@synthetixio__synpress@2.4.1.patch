diff --git a/commands/metamask.js b/commands/metamask.js
index a3ff3b286d8d2b33ad015fadc20ecbdf04233291..f1e235d252743b889012f992bcb3089f42635bd1 100644
--- a/commands/metamask.js
+++ b/commands/metamask.js
@@ -31,6 +31,7 @@ const {
   confirmationPageElements,
 } = require('../pages/metamask/confirmation-page');
 const { setNetwork, getNetwork } = require('../helpers');
+const sleep = require('util').promisify(setTimeout);
 
 let extensionInitialUrl;
 let extensionId;
@@ -324,6 +325,19 @@ module.exports = {
     await playwright.waitAndClick(mainPageElements.accountMenu.button);
 
     if (typeof accountNameOrAccountNumber === 'number') {
+      const page = await playwright.metamaskWindow();
+      await playwright.waitFor(mainPageElements.accountMenu.accountButton(1), page);
+
+      for (let i = 2; i <= accountNameOrAccountNumber; i++) {
+        if (!(await page.locator(mainPageElements.accountMenu.accountButton(i)).count())) {
+          await playwright.waitAndClick(
+            mainPageElements.accountMenu.createAccountButton,
+          );
+          await playwright.waitAndClick(mainPageElements.createAccount.createButton);
+          await playwright.waitAndClick(mainPageElements.accountMenu.button);
+        }
+      }
+
       await playwright.waitAndClick(
         mainPageElements.accountMenu.accountButton(accountNameOrAccountNumber),
       );
@@ -644,6 +658,7 @@ module.exports = {
     return true;
   },
   confirmTransaction: async gasConfig => {
+    if (process.env.TRANSACTION_WAIT_TIME) await sleep(parseInt(process.env.TRANSACTION_WAIT_TIME));
     const notificationPage = await playwright.switchToMetamaskNotification();
     if (gasConfig && gasConfig.gasFee) {
       await playwright.waitAndSetValue(
diff --git a/commands/playwright.js b/commands/playwright.js
index 11e031f8eee2a0721e0d0d235c3bc7ac26f6fb18..bee4e6ab555fe042f8f605d3dc4725445ce30ce3 100644
--- a/commands/playwright.js
+++ b/commands/playwright.js
@@ -152,21 +152,15 @@ module.exports = {
         force: args.force,
       });
     } else if (args.numberOfClicks && args.waitForEvent) {
-      await Promise.all([
-        page.waitForEvent(args.waitForEvent),
-        element.click({ clickCount: args.numberOfClicks, force: args.force }),
-      ]);
+      element.click({ clickCount: args.numberOfClicks, force: args.force })
+      await page.waitForEvent(args.waitForEvent)
     } else if (args.waitForEvent) {
       if (args.waitForEvent.includes('navi')) {
-        await Promise.all([
-          page.waitForNavigation(),
-          element.click({ force: args.force }),
-        ]);
+        element.click({ force: args.force })
+        await page.waitForNavigation();
       } else {
-        await Promise.all([
-          page.waitForEvent(args.waitForEvent),
-          element.click({ force: args.force }),
-        ]);
+        element.click({ force: args.force });
+        await page.waitForEvent(args.waitForEvent);
       }
     } else {
       await element.click({ force: args.force });